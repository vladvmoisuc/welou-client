[{"D:\\Proiecte\\welou website\\client\\src\\App.js":"1","D:\\Proiecte\\welou website\\client\\src\\containers\\Connect\\index.js":"2","D:\\Proiecte\\welou website\\client\\src\\reportWebVitals.js":"3","D:\\Proiecte\\welou website\\client\\src\\index.js":"4","D:\\Proiecte\\welou website\\client\\src\\constants\\counties.js":"5","D:\\Proiecte\\welou website\\client\\src\\utils\\strings.js":"6","D:\\Proiecte\\welou website\\client\\src\\containers\\Description\\index.js":"7","D:\\Proiecte\\welou website\\client\\src\\constants\\suggestions.js":"8","D:\\Proiecte\\welou website\\client\\src\\containers\\BooksPreferences\\index.js":"9","D:\\Proiecte\\welou website\\client\\src\\containers\\MusicPreferences\\index.js":"10","D:\\Proiecte\\welou website\\client\\src\\containers\\SportsPreferences\\index.js":"11","D:\\Proiecte\\welou website\\client\\src\\containers\\SeriesPreferences\\index.js":"12","D:\\Proiecte\\welou website\\client\\src\\containers\\HobbiesPreferences\\index.js":"13","D:\\Proiecte\\welou website\\client\\src\\containers\\InterestsPreferences\\index.js":"14","D:\\Proiecte\\welou website\\client\\src\\utils\\index.js":"15","D:\\Proiecte\\welou website\\client\\src\\utils\\hooks.js":"16","D:\\Proiecte\\welou website\\client\\src\\containers\\BioPreferences\\index.js":"17","D:\\Proiecte\\welou website\\client\\src\\components\\WalkthroughHeader\\index.jsx":"18","D:\\Proiecte\\welou website\\client\\src\\containers\\Profile\\index.js":"19","D:\\Proiecte\\welou website\\client\\src\\components\\TopBar\\index.jsx":"20","D:\\Proiecte\\welou website\\client\\src\\components\\InterestsList\\index.jsx":"21","D:\\Proiecte\\welou website\\client\\src\\components\\ProfileCard\\index.jsx":"22","D:\\Proiecte\\welou website\\client\\src\\containers\\Match\\index.js":"23","D:\\Proiecte\\welou website\\client\\src\\containers\\Notifications\\index.js":"24","D:\\Proiecte\\welou website\\client\\src\\components\\MenuBar\\index.jsx":"25","D:\\Proiecte\\welou website\\client\\src\\components\\Notification\\index.jsx":"26","D:\\Proiecte\\welou website\\client\\src\\containers\\Chat\\index.js":"27","D:\\Proiecte\\welou website\\client\\src\\utils\\api.js":"28","D:\\Proiecte\\welou website\\client\\src\\api\\firebase.js":"29","D:\\Proiecte\\welou website\\client\\src\\routes.js":"30","D:\\Proiecte\\welou website\\client\\src\\containers\\Meet\\index.js":"31"},{"size":2869,"mtime":1611618763343,"results":"32","hashOfConfig":"33"},{"size":3407,"mtime":1611702167778,"results":"34","hashOfConfig":"33"},{"size":362,"mtime":1606528385738,"results":"35","hashOfConfig":"33"},{"size":567,"mtime":1609196050376,"results":"36","hashOfConfig":"33"},{"size":1826,"mtime":1606665276994,"results":"37","hashOfConfig":"33"},{"size":528,"mtime":1606664521335,"results":"38","hashOfConfig":"33"},{"size":2977,"mtime":1611531839778,"results":"39","hashOfConfig":"33"},{"size":41932,"mtime":1606853517520,"results":"40","hashOfConfig":"33"},{"size":2222,"mtime":1608055075189,"results":"41","hashOfConfig":"33"},{"size":2471,"mtime":1608055269119,"results":"42","hashOfConfig":"33"},{"size":2311,"mtime":1608055349380,"results":"43","hashOfConfig":"33"},{"size":2320,"mtime":1608158847529,"results":"44","hashOfConfig":"33"},{"size":2294,"mtime":1608055293250,"results":"45","hashOfConfig":"33"},{"size":1809,"mtime":1611602376106,"results":"46","hashOfConfig":"33"},{"size":305,"mtime":1606865088591,"results":"47","hashOfConfig":"33"},{"size":1604,"mtime":1611436323435,"results":"48","hashOfConfig":"33"},{"size":3859,"mtime":1611602013245,"results":"49","hashOfConfig":"33"},{"size":632,"mtime":1606958469909,"results":"50","hashOfConfig":"33"},{"size":1343,"mtime":1611603209306,"results":"51","hashOfConfig":"33"},{"size":1155,"mtime":1611603034914,"results":"52","hashOfConfig":"33"},{"size":1024,"mtime":1607455401717,"results":"53","hashOfConfig":"33"},{"size":2042,"mtime":1608226579844,"results":"54","hashOfConfig":"33"},{"size":5566,"mtime":1611693774856,"results":"55","hashOfConfig":"33"},{"size":3507,"mtime":1611609258505,"results":"56","hashOfConfig":"33"},{"size":901,"mtime":1608769541751,"results":"57","hashOfConfig":"33"},{"size":805,"mtime":1608767808594,"results":"58","hashOfConfig":"33"},{"size":7713,"mtime":1611698182217,"results":"59","hashOfConfig":"33"},{"size":127,"mtime":1608157195427,"results":"60","hashOfConfig":"33"},{"size":2047,"mtime":1611701814253,"results":"61","hashOfConfig":"33"},{"size":2089,"mtime":1611435413689,"results":"62","hashOfConfig":"33"},{"size":4313,"mtime":1611697311021,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"67"},"hci5mh",{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"98"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"94"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"67"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151"},"D:\\Proiecte\\welou website\\client\\src\\App.js",["152","153"],"import { useEffect, useState } from 'react';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport routes from './routes';\nimport { database, onMessageListener } from './api/firebase';\nimport api from './utils/api';\nimport { notification } from 'antd';\n\nimport './App.scss';\n\nconst App = ({ history }) => {\n  const [user, setUserData] = useState({});\n  const [messages, setMessages] = useState([]);\n  const [conversationPartnerId, setConversationPartnerId] = useState(null);\n  const [notifications, setNotifications] = useState([]);\n  const [conversationPartner, setConversationPartner] = useState([]);\n  const [chatData, setChatData] = useState(null);\n\n  useEffect(() => {\n    if (user && user.currentChatId) {\n      database\n        .collection('chats')\n        .doc(user.currentChatId)\n        .collection('messages')\n        .limit(50)\n        .onSnapshot((snapshot) => {\n          const messagesList = [...messages];\n          snapshot.forEach((doc) => messagesList.push(doc.data()));\n          setMessages(messagesList);\n        });\n    }\n  }, [user.currentChatId]);\n\n  useEffect(() => {\n    const validateToken = async () => {\n      const token = localStorage.getItem('token');\n      const facebookId = localStorage.getItem('facebookId');\n      if (token) {\n        try {\n          await api.get(`https://graph.facebook.com/me?access_token=${token}`);\n\n          if (facebookId) {\n            history.push('/match');\n          }\n        } catch (error) {\n          window.location.href = '/';\n          localStorage.clear();\n        }\n      }\n    };\n\n    validateToken();\n    onMessageListener((payload) => {\n      if (\n        (payload.data.type === 'message' &&\n          window.location.pathname === '/chat') ||\n        (payload.data.type === 'request' &&\n          window.location.pathname === '/notifications')\n      ) {\n        return;\n      } else {\n        notification.open({\n          message: payload.notification.title,\n          description: payload.notification.body,\n          duration: 2,\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__containers\">\n        <Switch>\n          {routes.map(({ route, component }) => (\n            <Route path={route} exact={true} key={route}>\n              {component({\n                chatData,\n                setChatData,\n                conversationPartner,\n                setConversationPartner,\n                conversationPartnerId,\n                messages,\n                setConversationPartnerId,\n                setMessages,\n                setUserData,\n                user,\n                notifications,\n                setNotifications,\n              })}\n            </Route>\n          ))}\n          <Redirect from=\"*\" to=\"/match\" />\n        </Switch>\n      </div>\n    </div>\n  );\n};\n\nexport default withRouter(App);\n",["154","155"],"D:\\Proiecte\\welou website\\client\\src\\containers\\Connect\\index.js",["156","157","158"],"import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button, Spin } from 'antd';\r\nimport FacebookIcon from '../../icons/facebook.svg';\r\nimport LogoIcon from '../../icons/logo.svg';\r\nimport { loginWithFacebook, getFacebookLoginData } from '../../api/firebase';\r\nimport api from '../../utils/api';\r\nimport './style.scss';\r\n\r\nconst Connect = ({ history, user, setUserData }) => {\r\n  const [isLoading, setLoadingStatus] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const getLoginData = async () => {\r\n      try {\r\n        setLoadingStatus(true);\r\n        const facebookLoginResponse = await getFacebookLoginData(() =>\r\n          setLoadingStatus(false)\r\n        );\r\n        if (facebookLoginResponse) {\r\n          localStorage.setItem('token', facebookLoginResponse.accessToken);\r\n        }\r\n        const { data } = await api.get('/user', {\r\n          params: {\r\n            facebookId: facebookLoginResponse\r\n              ? String(facebookLoginResponse.id)\r\n              : '',\r\n          },\r\n        });\r\n\r\n        if (data && data.avatar !== facebookLoginResponse.url) {\r\n          await api.post('/user/update', {\r\n            _id: data._id,\r\n            avatar: facebookLoginResponse.url,\r\n          });\r\n        }\r\n\r\n        if (facebookLoginResponse) {\r\n          localStorage.setItem('facebookId', facebookLoginResponse.id);\r\n        }\r\n        if (\r\n          !!!data &&\r\n          facebookLoginResponse &&\r\n          facebookLoginResponse.isNewUser\r\n        ) {\r\n          setUserData({\r\n            ...user,\r\n            avatar: facebookLoginResponse.url,\r\n            facebookId: facebookLoginResponse.id,\r\n          });\r\n\r\n          history.push('/walkthrough/description');\r\n        } else if (\r\n          data &&\r\n          facebookLoginResponse &&\r\n          !facebookLoginResponse.isNewUdser &&\r\n          data.walkthrough === 'uncompleted'\r\n        ) {\r\n          setUserData({\r\n            ...user,\r\n            avatar: facebookLoginResponse.url,\r\n            facebookId: facebookLoginResponse.id,\r\n          });\r\n\r\n          history.push('/walkthrough/description');\r\n        } else if (facebookLoginResponse) {\r\n          setUserData({ ...data, avatar: facebookLoginResponse.url });\r\n          history.push('/match');\r\n        }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n\r\n    getLoginData();\r\n  }, []);\r\n\r\n  const handleFacebookLogin = () => {\r\n    loginWithFacebook();\r\n  };\r\n\r\n  return !isLoading ? (\r\n    <div className=\"connect\">\r\n      <div className=\"connect__content\">\r\n        <img className=\"connect__logo\" src={LogoIcon} />\r\n        <h1 className=\"heading\">Ești gata să-ți faci prieteni noi?</h1>\r\n        <p className=\"paragraph bolder\">\r\n          Intră în aplicație, descoperă oameni pe placul tău și începe cele mai\r\n          interesante conversații.\r\n        </p>\r\n        <Button\r\n          block\r\n          disabled={false}\r\n          size=\"large\"\r\n          className=\"button_primary\"\r\n          onClick={handleFacebookLogin}\r\n          icon={<img className=\"button__icon\" src={FacebookIcon} />}\r\n        >\r\n          Loghează-te cu Facebook\r\n        </Button>\r\n      </div>\r\n      <div className=\"connect__placeholder \" />\r\n    </div>\r\n  ) : (\r\n    <div className=\"loading\">\r\n      <Spin size=\"large\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Connect);\r\n",["159","160"],"D:\\Proiecte\\welou website\\client\\src\\reportWebVitals.js",[],["161","162"],"D:\\Proiecte\\welou website\\client\\src\\index.js",[],"D:\\Proiecte\\welou website\\client\\src\\constants\\counties.js",["163"],"export default [\r\n  { value: 'Alba', label: 'Alba' },\r\n  { value: 'Arad', label: 'Arad' },\r\n  { value: 'Arges', label: 'Argeş' },\r\n  { value: 'Bacau', label: 'Bacău' },\r\n  { value: 'Bihor', label: 'Bihor' },\r\n  { value: 'Bistrita-Nasaud', label: 'Bistriţa-Năsăud' },\r\n  { value: 'Botosani', label: 'Botoşani' },\r\n  { value: 'Braila', label: 'Brăila' },\r\n  { value: 'Brasov', label: 'Braşov' },\r\n  { value: 'Bucuresti', label: 'Bucureşti' },\r\n  { value: 'Buzau', label: 'Buzău' },\r\n  { value: 'Calarasi', label: 'Călăraşi' },\r\n  { value: 'Caras-Severin', label: 'Caraş-Severin' },\r\n  { value: 'Cluj', label: 'Cluj' },\r\n  { value: 'Constanta', label: 'Constanţa' },\r\n  { value: 'Covasna', label: 'Covasna' },\r\n  { value: 'Dambovita', label: 'Dâmboviţa' },\r\n  { value: 'Dolj', label: 'Dolj' },\r\n  { value: 'Galati', label: 'Galaţi' },\r\n  { value: 'Giurgiu', label: 'Giurgiu' },\r\n  { value: 'Gorj', label: 'Gorj' },\r\n  { value: 'Harghita', label: 'Harghita' },\r\n  { value: 'Hunedoara', label: 'Hunedoara' },\r\n  { value: 'Ialomita', label: 'Ialomiţa' },\r\n  { value: 'Iasi', label: 'Iaşi' },\r\n  { value: 'Ilfov', label: 'Ilfov' },\r\n  { value: 'Maramures', label: 'Maramureş' },\r\n  { value: 'Mehedinti', label: 'Mehedinţi' },\r\n  { value: 'Mures', label: 'Mureş' },\r\n  { value: 'Neamt', label: 'Neamţ' },\r\n  { value: 'Olt', label: 'Olt' },\r\n  { value: 'Prahova', label: 'Prahova' },\r\n  { value: 'Salaj', label: 'Sălaj' },\r\n  { value: 'Satu Mare', label: 'Satu Mare' },\r\n  { value: 'Sibiu', label: 'Sibiu' },\r\n  { value: 'Suceava', label: 'Suceava' },\r\n  { value: 'Teleorman', label: 'Teleorman' },\r\n  { value: 'Timis', label: 'Timiş' },\r\n  { value: 'Tulcea', label: 'Tulcea' },\r\n  { value: 'Vlcea', label: 'Vâlcea' },\r\n  { value: 'Vaslui', label: 'Vaslui' },\r\n  { value: 'Vrancea', label: 'Vrancea' },\r\n];\r\n",["164","165"],"D:\\Proiecte\\welou website\\client\\src\\utils\\strings.js",[],["166","167"],"D:\\Proiecte\\welou website\\client\\src\\containers\\Description\\index.js",["168"],"D:\\Proiecte\\welou website\\client\\src\\constants\\suggestions.js",["169"],"D:\\Proiecte\\welou website\\client\\src\\containers\\BooksPreferences\\index.js",[],["170","171"],"D:\\Proiecte\\welou website\\client\\src\\containers\\MusicPreferences\\index.js",["172"],"import React from 'react';\r\nimport { Button, AutoComplete } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport WalkthroughHeader from '../../components/WalkthroughHeader';\r\nimport { listOfMusicGenres } from '../../constants/suggestions';\r\nimport { handleAutocompleteFilter } from '../../utils';\r\nimport { useAutocompleteMethods } from '../../utils/hooks';\r\nimport './style.scss';\r\n\r\nconst MusicPreferences = ({ history, user, setUserData }) => {\r\n  const [\r\n    options,\r\n    searchValue,\r\n    setSearchValue,\r\n    handleKeyPress,\r\n    handleOnRemove,\r\n    handleOnSelect,\r\n  ] = useAutocompleteMethods();\r\n\r\n  const handleOnClick = () => {\r\n    setUserData({\r\n      ...user,\r\n      music: options,\r\n    });\r\n    history.push('/walkthrough/series');\r\n  };\r\n\r\n  return (\r\n    <div className=\"walkthrough-page page-container\">\r\n      <WalkthroughHeader path=\"series\" percent={50} />\r\n      <div className=\"walkthrough-page__content\">\r\n        <h1 className=\"heading\">Ce genuri muzicale îți plac?</h1>\r\n        <p className=\"paragraph paragraph_medium\">\r\n          * Poți introduce mai multe răspunsuri.\r\n        </p>\r\n        <p className=\"paragraph paragraph_medium\">\r\n          * Sugestiile sunt în engleză, dar poți introduce orice denumire.\r\n        </p>\r\n        <AutoComplete\r\n          options={listOfMusicGenres}\r\n          value={searchValue}\r\n          onChange={setSearchValue}\r\n          placeholder=\"Caută un gen\"\r\n          filterOption={handleAutocompleteFilter}\r\n          size=\"large\"\r\n          className=\"autocomplete\"\r\n          size=\"large\"\r\n          onSelect={handleOnSelect}\r\n          onKeyDown={handleKeyPress}\r\n        />\r\n        {!!options &&\r\n          options.map((value) => (\r\n            <button\r\n              className=\"pill pill_closable\"\r\n              value={value}\r\n              key={value}\r\n              onClick={handleOnRemove}\r\n            >\r\n              {value}\r\n              <CloseOutlined />\r\n            </button>\r\n          ))}\r\n      </div>\r\n      <div className=\"walkthrough-page__footer\">\r\n        <Link to=\"/walkthrough/sports\" className=\"link\">\r\n          Înapoi\r\n        </Link>\r\n        <Button\r\n          className=\"btn_primary\"\r\n          disabled={false}\r\n          onClick={handleOnClick}\r\n        >\r\n          Continuă\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(MusicPreferences);\r\n",["173","174"],"D:\\Proiecte\\welou website\\client\\src\\containers\\SportsPreferences\\index.js",["175"],"import React from 'react';\r\nimport { Button, AutoComplete } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport WalkthroughHeader from '../../components/WalkthroughHeader';\r\nimport { listOfSports } from '../../constants/suggestions';\r\nimport { handleAutocompleteFilter } from '../../utils';\r\nimport { useAutocompleteMethods } from '../../utils/hooks';\r\nimport './style.scss';\r\n\r\nconst SportsPreferences = ({ history, user, setUserData }) => {\r\n  const [\r\n    options,\r\n    searchValue,\r\n    setSearchValue,\r\n    handleKeyPress,\r\n    handleOnRemove,\r\n    handleOnSelect,\r\n  ] = useAutocompleteMethods();\r\n\r\n  const handleOnClick = () => {\r\n    setUserData({\r\n      ...user,\r\n      sports: options,\r\n    });\r\n    history.push('/walkthrough/music');\r\n  };\r\n\r\n  return (\r\n    <div className=\"walkthrough-page page-container\">\r\n      <WalkthroughHeader path=\"music\" percent={40} />\r\n      <div className=\"walkthrough-page__content\">\r\n        <h1 className=\"heading\">Ce sporturi îți plac?</h1>\r\n        <p className=\"paragraph paragraph_medium\">\r\n          * Poți introduce mai multe răspunsuri.\r\n        </p>\r\n        <AutoComplete\r\n          options={listOfSports}\r\n          value={searchValue}\r\n          onChange={setSearchValue}\r\n          placeholder=\"Caută un sport\"\r\n          filterOption={handleAutocompleteFilter}\r\n          size=\"large\"\r\n          className=\"autocomplete\"\r\n          size=\"large\"\r\n          onSelect={handleOnSelect}\r\n          onKeyDown={handleKeyPress}\r\n        />\r\n        {!!options &&\r\n          options.map((value) => (\r\n            <button\r\n              className=\"pill pill_closable\"\r\n              value={value}\r\n              key={value}\r\n              onClick={handleOnRemove}\r\n            >\r\n              {value}\r\n              <CloseOutlined />\r\n            </button>\r\n          ))}\r\n      </div>\r\n      <div className=\"walkthrough-page__footer\">\r\n        <Link to=\"/walkthrough/books\" className=\"link\">\r\n          Înapoi\r\n        </Link>\r\n        <Button\r\n          className=\"btn_primary\"\r\n          disabled={false}\r\n          onClick={handleOnClick}\r\n        >\r\n          Continuă\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SportsPreferences);\r\n",["176","177"],"D:\\Proiecte\\welou website\\client\\src\\containers\\SeriesPreferences\\index.js",["178"],"import React from 'react';\r\nimport { Button, AutoComplete } from 'antd';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { CloseOutlined } from '@ant-design/icons';\r\nimport WalkthroughHeader from '../../components/WalkthroughHeader';\r\nimport { listOfTVSeries } from '../../constants/suggestions';\r\nimport { handleAutocompleteFilter } from '../../utils';\r\nimport { useAutocompleteMethods } from '../../utils/hooks';\r\nimport './style.scss';\r\n\r\nconst SeriesPreferences = ({ history, user, setUserData }) => {\r\n  const [\r\n    options,\r\n    searchValue,\r\n    setSearchValue,\r\n    handleKeyPress,\r\n    handleOnRemove,\r\n    handleOnSelect,\r\n  ] = useAutocompleteMethods();\r\n\r\n  const handleOnClick = () => {\r\n    setUserData({\r\n      ...user,\r\n      series: options,\r\n    });\r\n    history.push('/walkthrough/hobbies');\r\n  };\r\n\r\n  return (\r\n    <div className=\"walkthrough-page page-container\">\r\n      <WalkthroughHeader path=\"hobbies\" percent={60} />\r\n      <div className=\"walkthrough-page__content\">\r\n        <h1 className=\"heading\">Ce seriale ai urmărit?</h1>\r\n        <p className=\"paragraph paragraph_medium\">\r\n          * Poți introduce mai multe răspunsuri.\r\n        </p>\r\n        <AutoComplete\r\n          options={listOfTVSeries}\r\n          value={searchValue}\r\n          onChange={setSearchValue}\r\n          placeholder=\"Caută un serial\"\r\n          size=\"large\"\r\n          className=\"autocomplete\"\r\n          size=\"large\"\r\n          onSelect={handleOnSelect}\r\n          onKeyDown={handleKeyPress}\r\n          filterOption={handleAutocompleteFilter}\r\n        />\r\n        {!!options &&\r\n          options.map((value) => (\r\n            <button\r\n              className=\"pill pill_closable\"\r\n              value={value}\r\n              key={value}\r\n              onClick={handleOnRemove}\r\n            >\r\n              {value}\r\n              <CloseOutlined />\r\n            </button>\r\n          ))}\r\n      </div>\r\n      <div className=\"walkthrough-page__footer\">\r\n        <Link to=\"/walkthrough/music\" className=\"link\">\r\n          Înapoi\r\n        </Link>\r\n        <Button\r\n          className=\"btn_primary\"\r\n          disabled={false}\r\n          onClick={handleOnClick}\r\n        >\r\n          Continuă\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(SeriesPreferences);\r\n",["179","180"],"D:\\Proiecte\\welou website\\client\\src\\containers\\HobbiesPreferences\\index.js",[],["181","182"],"D:\\Proiecte\\welou website\\client\\src\\containers\\InterestsPreferences\\index.js",[],"D:\\Proiecte\\welou website\\client\\src\\utils\\index.js",[],["183","184"],"D:\\Proiecte\\welou website\\client\\src\\utils\\hooks.js",[],"D:\\Proiecte\\welou website\\client\\src\\containers\\BioPreferences\\index.js",["185","186"],"import React, { useState } from 'react';\r\nimport { Button, Input, Checkbox } from 'antd';\r\nimport { withRouter } from 'react-router-dom';\r\nimport api from '../../utils/api';\r\nimport WalkthroughHeader from '../../components/WalkthroughHeader';\r\nimport { getMessagingToken } from '../../api/firebase';\r\nimport './style.scss';\r\n\r\nconst { TextArea } = Input;\r\n\r\nconst BioPreferences = ({ history, user, setUserData }) => {\r\n  const [description, setDescription] = useState('');\r\n  const [hasNotificationsConsent, setNotificationConsent] = useState(false);\r\n  const [hasDataConsent, setDataConsent] = useState(false);\r\n  const [hasError, setError] = useState('');\r\n\r\n  const handleChange = (event) => {\r\n    setDescription(event.target.value);\r\n  };\r\n\r\n  const handleOnClick = async () => {\r\n    try {\r\n      setUserData({\r\n        ...user,\r\n        description,\r\n        walkthrough: 'completed',\r\n      });\r\n      await api.post('/user', {\r\n        ...user,\r\n        description,\r\n        walkthrough: 'completed',\r\n      });\r\n      history.push('/match');\r\n    } catch (error) {}\r\n  };\r\n\r\n  const handleNotificationConsent = async () => {\r\n    if (!hasNotificationsConsent) {\r\n      const token = await getMessagingToken();\r\n\r\n      if (!token) {\r\n        setNotificationConsent(false);\r\n        setError(true);\r\n      } else {\r\n        setNotificationConsent(true);\r\n        setUserData({ ...user, fcmToken: token });\r\n        setError(false);\r\n      }\r\n    } else {\r\n      setNotificationConsent(false);\r\n      setUserData({ ...user, fcmToken: '' });\r\n    }\r\n  };\r\n\r\n  const handleDataConsent = () => {\r\n    setDataConsent(!hasDataConsent);\r\n  };\r\n\r\n  return (\r\n    <div className=\"walkthrough-page page-container bio\">\r\n      <WalkthroughHeader path=\"interests\" percent={95} label=\"Înapoi\" />\r\n      <div className=\"walkthrough-page__content bio\">\r\n        <h1 className=\"heading\">Ultimele detalii</h1>\r\n        <div className=\"description-box\">\r\n          <img className=\"image image_small-centered\" src={user.avatar} />\r\n          <p className=\"paragraph_medium\">\r\n            Vom folosi ca fotografie de profil poza pe care o ai acum pe\r\n            Facebook.\r\n          </p>\r\n        </div>\r\n        <p className=\"paragraph bio_paragraph\">\r\n          Cum te-ai descrie, în câteva cuvinte?\r\n        </p>\r\n        <TextArea\r\n          className=\"textarea\"\r\n          rows={4}\r\n          showCount\r\n          maxLength={100}\r\n          placeholder=\"Scrie ceva despre tine\"\r\n          value={description}\r\n          onChange={handleChange}\r\n        />\r\n        <Checkbox\r\n          checked={hasNotificationsConsent}\r\n          onChange={handleNotificationConsent}\r\n        >\r\n          Vreau să primesc notificări atunci când primesc cerere sau mesaj de la\r\n          cineva.\r\n        </Checkbox>\r\n        <Checkbox checked={hasDataConsent} onChange={handleDataConsent}>\r\n          Sunt de acord ca datele personale să-mi fie prelucrate conform{' '}\r\n          <a href=\"#\" target=\"_blank\">\r\n            politicii de confidențialitate.\r\n          </a>\r\n        </Checkbox>\r\n        {hasError && (\r\n          <>\r\n            <p className=\"paragraph error\">\r\n              Ai blocat opțiunea pentru afișarea notificărilor. Te rugăm să\r\n              permiți notificările și să bifezi această căsuță.\r\n            </p>\r\n            <p className=\"paragraph error\">\r\n              Important! Nu da refresh după ce ai permis afișarea notificărilor.\r\n            </p>\r\n          </>\r\n        )}\r\n      </div>\r\n      <div className=\"walkthrough-page__footer\">\r\n        <Button\r\n          className=\"button_primary \"\r\n          block\r\n          disabled={!hasDataConsent}\r\n          onClick={handleOnClick}\r\n        >\r\n          Finalizează\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(BioPreferences);\r\n","D:\\Proiecte\\welou website\\client\\src\\components\\WalkthroughHeader\\index.jsx",["187"],"import React from 'react';\r\nimport { Progress } from 'antd';\r\nimport { Link } from 'react-router-dom';\r\nimport LogoIcon from '../../icons/logo.svg';\r\nimport './styles.scss';\r\n\r\nconst WalkthroughHeader = ({ path, percent, label = 'Treci peste' }) => {\r\n  return (\r\n    <div className=\"walkthrough-header\">\r\n      <div className=\"walkthrough-header__top\">\r\n        <img className=\"walkthrough-header__logo\" src={LogoIcon} />\r\n        <Link to={`/walkthrough/${path}`} className=\"link\">\r\n          {label}\r\n        </Link>\r\n      </div>\r\n      <Progress percent={percent} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WalkthroughHeader;\r\n","D:\\Proiecte\\welou website\\client\\src\\containers\\Profile\\index.js",["188"],"D:\\Proiecte\\welou website\\client\\src\\components\\TopBar\\index.jsx",["189","190"],"D:\\Proiecte\\welou website\\client\\src\\components\\InterestsList\\index.jsx",["191","192"],"import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './styles.scss';\r\n\r\nconst InterestsList = ({ heading, icon, interests, color, collapsed }) => {\r\n  return (\r\n    <div className=\"interest\">\r\n      {!collapsed && (\r\n        <div className=\"interest__header\">\r\n          <img src={icon} className=\"interest__icon\" />\r\n          <span className=\"interest__heading\">{heading}:</span>\r\n        </div>\r\n      )}\r\n      <div className=\"interest__options\">\r\n        {collapsed && (\r\n          <img src={icon} className=\"interest__icon interest__icon_small\" />\r\n        )}\r\n        {!!interests.length &&\r\n          interests.map((value) => (\r\n            <button\r\n              className={classNames('pill', {\r\n                [`pill_${color}`]: color,\r\n                pill_small: collapsed,\r\n              })}\r\n              key={value}\r\n              disabled\r\n            >\r\n              {value}\r\n            </button>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterestsList;\r\n","D:\\Proiecte\\welou website\\client\\src\\components\\ProfileCard\\index.jsx",["193"],"import React from 'react';\r\nimport BookIcon from '../../icons/book.svg';\r\nimport SportIcon from '../../icons/sports.svg';\r\nimport MusicIcon from '../../icons/music.svg';\r\nimport SeriesIcon from '../../icons/series.svg';\r\nimport HobbiesIcon from '../../icons/hobbies.svg';\r\nimport InterestsList from '../InterestsList';\r\nimport './styles.scss';\r\n\r\nconst ProfileCard = ({ collapsed, user }) => {\r\n  return (\r\n    <>\r\n      <div className=\"profile-card\">\r\n        <img className=\"profile-card__image\" src={user.avatar} />\r\n        <div className=\"profile-card__data\">\r\n          <div className=\"profile-card__name-and-age\">\r\n            <span className=\"profile-card__name\">\r\n              {user.firstName} {user.lastName}\r\n            </span>\r\n            <span className=\"profile-card__age\"> {user.age}</span>\r\n          </div>\r\n          <span className=\"profile-card__location\">\r\n            Din {user.county}, România\r\n          </span>\r\n        </div>\r\n      </div>\r\n      <p className=\"profile-card__description\">{user.description}</p>\r\n      <InterestsList\r\n        interests={user.books}\r\n        icon={BookIcon}\r\n        heading=\"Citesc cărți din genurile\"\r\n        color=\"orange\"\r\n        collapsed={collapsed}\r\n      />\r\n      <InterestsList\r\n        interests={user.series}\r\n        icon={SeriesIcon}\r\n        heading=\"Am văzut serialele\"\r\n        color=\"light-orange\"\r\n        collapsed={collapsed}\r\n      />\r\n      <InterestsList\r\n        interests={user.sports}\r\n        icon={SportIcon}\r\n        heading=\"Îmi plac sporturile precum\"\r\n        color=\"yellow\"\r\n        collapsed={collapsed}\r\n      />\r\n      <InterestsList\r\n        interests={user.music}\r\n        icon={MusicIcon}\r\n        heading=\"Ascult muzică din genurile\"\r\n        color=\"pink\"\r\n        collapsed={collapsed}\r\n      />\r\n      <InterestsList\r\n        interests={user.hobbies}\r\n        icon={HobbiesIcon}\r\n        heading=\"Am ca hobby-uri\"\r\n        color=\"purple\"\r\n        collapsed={collapsed}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProfileCard;\r\n","D:\\Proiecte\\welou website\\client\\src\\containers\\Match\\index.js",["194","195","196","197","198","199","200","201","202","203","204"],"D:\\Proiecte\\welou website\\client\\src\\containers\\Notifications\\index.js",["205"],"import React, { useEffect, useState } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Modal } from 'antd';\r\nimport TopBar from '../../components/TopBar';\r\nimport Notification from '../../components/Notification';\r\nimport { loadUserData } from '../../utils/hooks';\r\nimport api from '../../utils/api';\r\nimport './style.scss';\r\n\r\nconst Notifications = ({\r\n  user,\r\n  setUserData,\r\n  history,\r\n  notifications,\r\n  setNotifications,\r\n  conversationPartnerId,\r\n  setMessages,\r\n  setConversationPartnerId,\r\n}) => {\r\n  const [isModalVisible, setModalVisibility] = useState(false);\r\n  const [partner, setPartner] = useState({});\r\n  const [fromId, setFromId] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadUserData(user, setUserData);\r\n  }, [user._id]);\r\n\r\n  const handleAcceptRequest = async (fromId) => {\r\n    setFromId(fromId);\r\n    if (user.currentChatId) {\r\n      const { data: partner } = await api.get('/user', {\r\n        params: {\r\n          id: conversationPartnerId,\r\n        },\r\n      });\r\n      setModalVisibility(true);\r\n      setPartner(partner);\r\n    } else {\r\n      await acceptRequest();\r\n    }\r\n  };\r\n\r\n  const acceptRequest = async () => {\r\n    setMessages([]);\r\n    const { data: chatId } = await api.post('/chat', {\r\n      receiverId: user._id,\r\n      senderId: fromId,\r\n    });\r\n    await api.post('/user/notification/accept', {\r\n      id: user._id,\r\n      from_id: fromId,\r\n      chatId,\r\n    });\r\n\r\n    const { data } = await api.get('/user', {\r\n      params: {\r\n        id: user._id,\r\n      },\r\n    });\r\n    setUserData(data);\r\n    setConversationPartnerId(fromId);\r\n    history.push('/chat');\r\n  };\r\n\r\n  const declineRequest = async (fromId) => {\r\n    await api.post('/user/notification/decline', {\r\n      id: user._id,\r\n      from_id: fromId,\r\n    });\r\n\r\n    const { data } = await api.get('/user', {\r\n      params: {\r\n        id: user._id,\r\n      },\r\n    });\r\n    setUserData(data);\r\n\r\n    const { updatedNotifications } = await api.get('/user/notifications', {\r\n      params: {\r\n        id: user._id,\r\n      },\r\n    });\r\n    setNotifications(!!updatedNotifications ? updatedNotifications : []);\r\n  };\r\n\r\n  return (\r\n    <div className=\"notifications walkthrough-page page-container match\">\r\n      <TopBar label=\"Notificări\" hasRightIcon={false} />\r\n      <div className=\"notifications__content\">\r\n        {!!notifications &&\r\n          !!notifications.length &&\r\n          notifications.map((notification) => (\r\n            <Notification\r\n              image={notification.avatar}\r\n              name={`${notification.firstName} ${notification.lastName}`}\r\n              id={notification._id}\r\n              key={notification.avatar}\r\n              acceptRequest={() => handleAcceptRequest(notification._id)}\r\n              declineRequest={() => declineRequest(notification._id)}\r\n            />\r\n          ))}\r\n        {!!!notifications.length && (\r\n          <p className=\"paragraph\">Nu ai nici o notificare.</p>\r\n        )}\r\n      </div>\r\n      <Modal\r\n        visible={isModalVisible && !!partner}\r\n        onOk={() => acceptRequest()}\r\n        okText=\"Sunt de acord\"\r\n        cancelText=\"Refuz\"\r\n        onCancel={() => setModalVisibility(false)}\r\n      >\r\n        <p className=\"paragraph\">\r\n          Dacă accepți această cerere discuția pe care o ai acum va și ștearsă\r\n          și nu vei mai putea vorbi cu {partner.firstName} {partner.lastName}.\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Notifications);\r\n","D:\\Proiecte\\welou website\\client\\src\\components\\MenuBar\\index.jsx",["206","207","208","209"],"D:\\Proiecte\\welou website\\client\\src\\components\\Notification\\index.jsx",["210","211"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport api from '../../utils/api';\r\n\r\nimport './styles.scss';\r\n\r\nconst InterestsList = ({ image, name, id, acceptRequest, declineRequest }) => {\r\n  return (\r\n    <div className=\"notification\">\r\n      <Link to={`/profile?id=${id}`} className=\"notification__link\">\r\n        <img src={image} className=\"image\" />\r\n        <p className=\"paragraph\">{name} vrea să discutați.</p>\r\n      </Link>\r\n      <div className=\"notification__buttons\">\r\n        <button className=\"button_primary\" onClick={acceptRequest}>\r\n          Acceptă\r\n        </button>\r\n        <button className=\"button_primary button_red\" onClick={declineRequest}>\r\n          Refuză\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InterestsList;\r\n","D:\\Proiecte\\welou website\\client\\src\\containers\\Chat\\index.js",["212","213","214","215","216","217","218"],"import React, { useState, useRef, useEffect } from 'react';\r\nimport TopBar from '../../components/TopBar';\r\nimport { Input, Button } from 'antd';\r\nimport { SendOutlined } from '@ant-design/icons';\r\nimport { withRouter } from 'react-router-dom';\r\nimport api from '../../utils/api';\r\nimport { loadUserData } from '../../utils/hooks';\r\nimport './style.scss';\r\n\r\nconst Chat = ({\r\n  conversationPartnerId,\r\n  setMessages,\r\n  user,\r\n  setUserData,\r\n  messages,\r\n  history,\r\n  setConversationPartner,\r\n  conversationPartner,\r\n  chatData,\r\n  setChatData,\r\n}) => {\r\n  const [message, setMessage] = useState('');\r\n  const messagesContainer = useRef(null);\r\n\r\n  const handleCurrentMessage = (event) => {\r\n    const { value } = event.target;\r\n\r\n    setMessage(value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserData(user, setUserData);\r\n  }, [user._id]);\r\n\r\n  useEffect(() => {\r\n    loadUserData(user, setUserData);\r\n  }, []);\r\n\r\n  const handleSend = async () => {\r\n    if (message !== '') {\r\n      await api.post('/chat/message', {\r\n        text: message,\r\n        senderId: user._id,\r\n        receiverId: conversationPartnerId,\r\n        documentId: user.currentChatId,\r\n      });\r\n\r\n      const { data: partner } = await api.get('/user', {\r\n        params: {\r\n          id: conversationPartnerId,\r\n        },\r\n      });\r\n\r\n      setConversationPartner(partner);\r\n\r\n      await api.post('/notification', {\r\n        token: partner.fcmToken,\r\n        title: `${partner.firstName} ${partner.lastName} ți-a trimis un mesaj`,\r\n        message: `${message.substring(0, 30)}...`,\r\n        icon: partner.avatar,\r\n      });\r\n\r\n      setMessage('');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (\r\n      user &&\r\n      user.currentChatId &&\r\n      !!chatData &&\r\n      chatData.hasLeft === '' &&\r\n      !!messagesContainer &&\r\n      !!messagesContainer.current\r\n    ) {\r\n      messagesContainer.current.scrollTo({\r\n        top: messagesContainer.current.scrollHeight,\r\n        behavior: 'smooth',\r\n      });\r\n    }\r\n  }, [messages]);\r\n\r\n  useEffect(() => {\r\n    if (user && user.currentChatId) {\r\n      if (!Object.keys(user).length) {\r\n        history.push('/match');\r\n      } else if (\r\n        !!chatData &&\r\n        chatData.hasLeft === '' &&\r\n        !!messagesContainer &&\r\n        !!messagesContainer.current\r\n      ) {\r\n        setTimeout(() => {\r\n          messagesContainer.current.scrollTo({\r\n            top: messagesContainer.current.scrollHeight,\r\n            behavior: 'smooth',\r\n          });\r\n        }, 300);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (user && user.currentChatId) {\r\n      if (conversationPartnerId) {\r\n        getConversationPartner();\r\n      }\r\n    }\r\n  }, [conversationPartnerId]);\r\n\r\n  const getConversationPartner = async () => {\r\n    const { data } = await api('/user', {\r\n      params: {\r\n        id: conversationPartnerId,\r\n      },\r\n    });\r\n    setConversationPartner(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (user && user.currentChatId) {\r\n      const hasPresentedMatch =\r\n        messages &&\r\n        messages.find(\r\n          ({ text }) =>\r\n            text === 'Avem o potrivire. Amândoi doriți să ieșiți împreună!'\r\n        );\r\n\r\n      const getChatData = async () => {\r\n        const { data } = await api.get('/chat/chatroom', {\r\n          params: { chatId: user.currentChatId },\r\n        });\r\n        setChatData(data);\r\n        if (\r\n          data.matches &&\r\n          Object.keys(data.matches).every((key) => data.matches[key]) &&\r\n          !hasPresentedMatch\r\n        ) {\r\n          await api.post('/chat/message', {\r\n            text: 'Avem o potrivire. Amândoi doriți să ieșiți împreună!',\r\n            senderId: user._id,\r\n            receiverId: conversationPartnerId,\r\n            documentId: user.currentChatId,\r\n            type: 'computer',\r\n          });\r\n        }\r\n      };\r\n      getChatData();\r\n    }\r\n  }, []);\r\n\r\n  if (\r\n    !!chatData &&\r\n    chatData.hasLeft !== user._id &&\r\n    chatData.hasLeft !== '' &&\r\n    user.currentChatId\r\n  ) {\r\n    return (\r\n      <div className=\"walkthrough-page chat\">\r\n        <TopBar\r\n          label={\r\n            !!conversationPartner &&\r\n            conversationPartner.firstName + ' ' + conversationPartner.lastName\r\n          }\r\n          hasRightIcon={!!user && !!user.currentChatId ? true : false}\r\n          hasEditIcon={false}\r\n          linkTo={'/lets-meet'}\r\n        />\r\n        <p className=\"paragraph\">\r\n          Pentru a găsi o altă persoană cu care să discuți e nevoie să părăsești\r\n          conversația.\r\n        </p>\r\n        <Button\r\n          block\r\n          disabled={false}\r\n          size=\"large\"\r\n          className=\"button_primary button_red margin-top\"\r\n          onClick={() => history.push('/lets-meet')}\r\n        >\r\n          Părăsește conversația\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"walkthrough-page page-container chat\">\r\n      <TopBar\r\n        label={\r\n          !!conversationPartner &&\r\n          conversationPartner.firstName !== undefined &&\r\n          conversationPartner.firstName + ' ' + conversationPartner.lastName\r\n        }\r\n        hasRightIcon={!!user && !!user.currentChatId ? true : false}\r\n        hasEditIcon={false}\r\n        linkTo={'/lets-meet'}\r\n      />\r\n      {!!user && !user.currentChatId && (\r\n        <div className=\"messages walkthrough-page__content\">\r\n          <h1 className=\"heading\">Nu ai nici o conversație în desfășurare.</h1>\r\n          <button\r\n            className=\"button_primary\"\r\n            onClick={() => history.push('/match')}\r\n          >\r\n            Caută un partener de discuție\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      <div\r\n        ref={messagesContainer}\r\n        className=\"messages walkthrough-page__content\"\r\n      >\r\n        {!!messages.length &&\r\n          conversationPartner &&\r\n          user &&\r\n          messages\r\n            .sort((a, b) => a.createdAt - b.createdAt)\r\n            .map((message) => (\r\n              <div\r\n                className={`message ${\r\n                  message.senderId === user._id ? 'message_reverse' : ''\r\n                }`}\r\n                key={message.id}\r\n              >\r\n                {message.type === 'message' && (\r\n                  <img\r\n                    src={\r\n                      message.senderId === user._id\r\n                        ? user.avatar\r\n                        : conversationPartner.avatar\r\n                    }\r\n                    className=\"message__image image\"\r\n                  />\r\n                )}\r\n                {(message.type === 'computer' ||\r\n                  message.type === 'initialization') && (\r\n                  <p className=\"center\">{message.text}</p>\r\n                )}\r\n\r\n                {message.type === 'message' && (\r\n                  <span\r\n                    className={`message__text ${\r\n                      message.senderId !== user._id ? 'message__text_blank' : ''\r\n                    }`}\r\n                  >\r\n                    {message.text}\r\n                  </span>\r\n                )}\r\n              </div>\r\n            ))}\r\n      </div>\r\n\r\n      {!!user && !!user.currentChatId && (\r\n        <div className=\"search-box\">\r\n          <Input\r\n            size=\"large\"\r\n            onChange={handleCurrentMessage}\r\n            value={message}\r\n            onPressEnter={handleSend}\r\n            addonAfter={\r\n              <Button\r\n                onClick={handleSend}\r\n                size=\"large\"\r\n                type=\"primary\"\r\n                icon={<SendOutlined />}\r\n              />\r\n            }\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Chat);\r\n","D:\\Proiecte\\welou website\\client\\src\\utils\\api.js",[],"D:\\Proiecte\\welou website\\client\\src\\api\\firebase.js",[],"D:\\Proiecte\\welou website\\client\\src\\routes.js",["219"],"import Connect from './containers/Connect';\r\nimport Description from './containers/Description';\r\nimport BooksPreferences from './containers/BooksPreferences';\r\nimport SportsPreferences from './containers/SportsPreferences';\r\nimport MusicPreferences from './containers/MusicPreferences';\r\nimport SeriesPreferences from './containers/SeriesPreferences';\r\nimport HobbiesPreferences from './containers/HobbiesPreferences';\r\nimport InterestsPreferences from './containers/InterestsPreferences';\r\nimport BioPreferences from './containers/BioPreferences';\r\nimport Match from './containers/Match';\r\nimport Profile from './containers/Profile';\r\nimport Notifications from './containers/Notifications';\r\nimport Chat from './containers/Chat';\r\nimport Meet from './containers/Meet';\r\n\r\nexport default [\r\n  { route: '/', component: (props) => <Connect {...props} /> },\r\n  {\r\n    route: '/walkthrough/description',\r\n    component: (props) => <Description {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/books',\r\n    component: (props) => <BooksPreferences {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/sports',\r\n    component: (props) => <SportsPreferences {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/music',\r\n    component: (props) => <MusicPreferences {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/series',\r\n    component: (props) => <SeriesPreferences {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/hobbies',\r\n    component: (props) => <HobbiesPreferences {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/interests',\r\n    component: (props) => <InterestsPreferences {...props} />,\r\n  },\r\n  {\r\n    route: '/walkthrough/bio',\r\n    component: (props) => <BioPreferences {...props} />,\r\n  },\r\n  { route: '/profile', component: (props) => <Profile {...props} /> },\r\n  { route: '/match', component: (props) => <Match {...props} /> },\r\n  {\r\n    route: '/notifications',\r\n    component: (props) => <Notifications {...props} />,\r\n  },\r\n  { route: '/chat', component: (props) => <Chat {...props} /> },\r\n  { route: '/lets-meet', component: (props) => <Meet {...props} /> },\r\n];\r\n","D:\\Proiecte\\welou website\\client\\src\\containers\\Meet\\index.js",["220"],"import React, { useState, useEffect } from 'react';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Button } from 'antd';\r\nimport TopBar from '../../components/TopBar';\r\nimport { Modal } from 'antd';\r\nimport api from '../../utils/api';\r\nimport { loadUserData } from '../../utils/hooks';\r\nimport './style.scss';\r\n\r\nconst Meet = ({\r\n  history,\r\n  user,\r\n  setUserData,\r\n  conversationPartner,\r\n  chatData,\r\n  conversationPartnerId,\r\n  setConversationPartner,\r\n  setMessages,\r\n}) => {\r\n  const [wannaMeet, setMeetDesire] = useState(false);\r\n  const [isModalVisible, setModalVisibility] = useState(false);\r\n\r\n  const toggleSwitch = async (status) => {\r\n    await api.post('/chat/chatroom', {\r\n      chatId: user.currentChatId,\r\n      userId: user._id,\r\n      status: !wannaMeet,\r\n    });\r\n\r\n    setMeetDesire(!wannaMeet);\r\n  };\r\n\r\n  const handleLeave = async () => {\r\n    await api.post('/chat/message', {\r\n      text: `${user.firstName} ${user.lastName} a părăsit conversația.`,\r\n      senderId: user._id,\r\n      receiverId: conversationPartnerId,\r\n      documentId: user.currentChatId,\r\n      type: 'computer',\r\n    });\r\n    await api.post('/chat/chatroom/leave', {\r\n      chatId: user.currentChatId,\r\n      userId: user._id,\r\n    });\r\n    await api.post('/user/update', {\r\n      _id: user._id,\r\n      currentChatId: '',\r\n    });\r\n\r\n    setMessages([]);\r\n    setConversationPartner({});\r\n    setUserData({ ...user, currentChatId: '' });\r\n    setModalVisibility(false);\r\n    history.push('/match');\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadUserData(user, setUserData);\r\n    const getChatData = async () => {\r\n      const { data } = await api.get('/chat/chatroom', {\r\n        params: { chatId: user.currentChatId },\r\n      });\r\n\r\n      setMeetDesire(data.matches[user._id]);\r\n    };\r\n\r\n    getChatData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"walkthrough-page page-container meet\">\r\n      <TopBar label=\"Chat\" hasRightIcon={false} goToChat={true} />\r\n      <div className=\"walkthrough-page__content meet-content\">\r\n        {!!chatData && !chatData.hasLeft && (\r\n          <>\r\n            <p className=\"paragraph\">\r\n              Ai vrea să ieșiți cândva împreună, dar nu știi cum să îi spui?\r\n              Ți-ar plăcea să știi dacă dorința e reciprocă?\r\n            </p>\r\n            <p>\r\n              * Dacă apeși butonul de mai jos îți vom salva dorința, însă\r\n              cealaltă persoană din această conversație nu va ști.\r\n            </p>\r\n            <p>\r\n              * Dacă și cel/cea cu care vorbești apasă pe buton veți primi\r\n              amândoi o notificare.\r\n            </p>\r\n            <button\r\n              className={`switch ${wannaMeet ? 'switch_on' : ''}`}\r\n              onClick={toggleSwitch}\r\n            >\r\n              <span className=\"circle\" />\r\n            </button>\r\n          </>\r\n        )}\r\n        <div className=\"meet_leave-conversation\">\r\n          <p className=\"paragraph\">Vrei să părăsești conversația?</p>\r\n          <p>\r\n            * Dacă apeși butonul de mai jos conversația va fi ștearsă și nu te\r\n            vei putea reîntoarce la ea.{' '}\r\n            {!!conversationPartner && !!chatData && !chatData.hasLeft\r\n              ? `${conversationPartner.firstName} ${\r\n                  conversationPartner.lastName\r\n                } va fi ${\r\n                  conversationPartner.gender === 'm' ? 'informat' : 'informată'\r\n                }\r\n               că ai părăsit conversația și nu îți va mai putea trimite mesaje.`\r\n              : ''}\r\n          </p>\r\n          <Button\r\n            block\r\n            disabled={false}\r\n            size=\"large\"\r\n            className=\"button_primary button_red\"\r\n            onClick={() => setModalVisibility(true)}\r\n          >\r\n            Părăsește conversația\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        visible={isModalVisible}\r\n        onOk={() => handleLeave()}\r\n        okText=\"Da\"\r\n        cancelText=\"Nu\"\r\n        onCancel={() => setModalVisibility(false)}\r\n      >\r\n        <p className=\"paragraph\">\r\n          Ești {user.gender === 'm' ? 'sigur' : 'sigură'} că vrei să părăsești\r\n          conversația?\r\n        </p>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Meet);\r\n",{"ruleId":"221","severity":1,"message":"222","line":31,"column":6,"nodeType":"223","endLine":31,"endColumn":26,"suggestions":"224"},{"ruleId":"221","severity":1,"message":"225","line":68,"column":6,"nodeType":"223","endLine":68,"endColumn":8,"suggestions":"226"},{"ruleId":"227","replacedBy":"228"},{"ruleId":"229","replacedBy":"230"},{"ruleId":"221","severity":1,"message":"231","line":76,"column":6,"nodeType":"223","endLine":76,"endColumn":8,"suggestions":"232"},{"ruleId":"233","severity":1,"message":"234","line":85,"column":9,"nodeType":"235","endLine":85,"endColumn":57},{"ruleId":"233","severity":1,"message":"234","line":97,"column":17,"nodeType":"235","endLine":97,"endColumn":68},{"ruleId":"227","replacedBy":"236"},{"ruleId":"229","replacedBy":"237"},{"ruleId":"227","replacedBy":"238"},{"ruleId":"229","replacedBy":"239"},{"ruleId":"240","severity":1,"message":"241","line":1,"column":1,"nodeType":"242","endLine":44,"endColumn":3},{"ruleId":"227","replacedBy":"243"},{"ruleId":"229","replacedBy":"244"},{"ruleId":"227","replacedBy":"245"},{"ruleId":"229","replacedBy":"246"},{"ruleId":"233","severity":1,"message":"234","line":38,"column":7,"nodeType":"235","endLine":38,"endColumn":59},{"ruleId":"247","severity":1,"message":"248","line":1,"column":1,"nodeType":"249","messageId":"250","fix":"251"},{"ruleId":"227","replacedBy":"252"},{"ruleId":"229","replacedBy":"253"},{"ruleId":"254","severity":1,"message":"255","line":48,"column":11,"nodeType":"256","endLine":48,"endColumn":23},{"ruleId":"227","replacedBy":"257"},{"ruleId":"229","replacedBy":"258"},{"ruleId":"254","severity":1,"message":"255","line":45,"column":11,"nodeType":"256","endLine":45,"endColumn":23},{"ruleId":"227","replacedBy":"259"},{"ruleId":"229","replacedBy":"260"},{"ruleId":"254","severity":1,"message":"255","line":44,"column":11,"nodeType":"256","endLine":44,"endColumn":23},{"ruleId":"227","replacedBy":"261"},{"ruleId":"229","replacedBy":"262"},{"ruleId":"227","replacedBy":"263"},{"ruleId":"229","replacedBy":"264"},{"ruleId":"227","replacedBy":"265"},{"ruleId":"229","replacedBy":"266"},{"ruleId":"233","severity":1,"message":"234","line":65,"column":11,"nodeType":"235","endLine":65,"endColumn":75},{"ruleId":"267","severity":1,"message":"268","line":92,"column":11,"nodeType":"235","endLine":92,"endColumn":39},{"ruleId":"233","severity":1,"message":"234","line":11,"column":9,"nodeType":"235","endLine":11,"endColumn":68},{"ruleId":"221","severity":1,"message":"269","line":27,"column":6,"nodeType":"223","endLine":27,"endColumn":8,"suggestions":"270"},{"ruleId":"233","severity":1,"message":"234","line":30,"column":11,"nodeType":"235","endLine":30,"endColumn":64},{"ruleId":"233","severity":1,"message":"234","line":36,"column":11,"nodeType":"235","endLine":39,"endColumn":13},{"ruleId":"233","severity":1,"message":"234","line":10,"column":11,"nodeType":"235","endLine":10,"endColumn":56},{"ruleId":"233","severity":1,"message":"234","line":16,"column":11,"nodeType":"235","endLine":16,"endColumn":77},{"ruleId":"233","severity":1,"message":"234","line":14,"column":9,"nodeType":"235","endLine":14,"endColumn":66},{"ruleId":"271","severity":1,"message":"272","line":2,"column":25,"nodeType":"273","messageId":"274","endLine":2,"endColumn":32},{"ruleId":"221","severity":1,"message":"275","line":37,"column":6,"nodeType":"223","endLine":37,"endColumn":16,"suggestions":"276"},{"ruleId":"221","severity":1,"message":"277","line":47,"column":6,"nodeType":"223","endLine":47,"endColumn":16,"suggestions":"278"},{"ruleId":"271","severity":1,"message":"279","line":101,"column":9,"nodeType":"273","messageId":"274","endLine":101,"endColumn":20},{"ruleId":"221","severity":1,"message":"280","line":123,"column":6,"nodeType":"223","endLine":123,"endColumn":16,"suggestions":"281"},{"ruleId":"221","severity":1,"message":"282","line":130,"column":6,"nodeType":"223","endLine":130,"endColumn":8,"suggestions":"283"},{"ruleId":"233","severity":1,"message":"234","line":135,"column":9,"nodeType":"235","endLine":135,"endColumn":69},{"ruleId":"233","severity":1,"message":"234","line":146,"column":13,"nodeType":"235","endLine":146,"endColumn":65},{"ruleId":"233","severity":1,"message":"234","line":165,"column":21,"nodeType":"235","endLine":165,"endColumn":68},{"ruleId":"233","severity":1,"message":"234","line":185,"column":19,"nodeType":"235","endLine":185,"endColumn":69},{"ruleId":"233","severity":1,"message":"234","line":195,"column":19,"nodeType":"235","endLine":195,"endColumn":69},{"ruleId":"221","severity":1,"message":"269","line":26,"column":6,"nodeType":"223","endLine":26,"endColumn":16,"suggestions":"284"},{"ruleId":"271","severity":1,"message":"285","line":2,"column":10,"nodeType":"273","messageId":"274","endLine":2,"endColumn":15},{"ruleId":"233","severity":1,"message":"234","line":13,"column":9,"nodeType":"235","endLine":13,"endColumn":67},{"ruleId":"233","severity":1,"message":"234","line":16,"column":9,"nodeType":"235","endLine":16,"endColumn":58},{"ruleId":"233","severity":1,"message":"234","line":20,"column":9,"nodeType":"235","endLine":20,"endColumn":58},{"ruleId":"271","severity":1,"message":"286","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":11},{"ruleId":"233","severity":1,"message":"234","line":11,"column":9,"nodeType":"235","endLine":11,"endColumn":46},{"ruleId":"221","severity":1,"message":"269","line":33,"column":6,"nodeType":"223","endLine":33,"endColumn":16,"suggestions":"287"},{"ruleId":"221","severity":1,"message":"269","line":37,"column":6,"nodeType":"223","endLine":37,"endColumn":8,"suggestions":"288"},{"ruleId":"221","severity":1,"message":"289","line":81,"column":6,"nodeType":"223","endLine":81,"endColumn":16,"suggestions":"290"},{"ruleId":"221","severity":1,"message":"291","line":101,"column":6,"nodeType":"223","endLine":101,"endColumn":8,"suggestions":"292"},{"ruleId":"221","severity":1,"message":"293","line":109,"column":6,"nodeType":"223","endLine":109,"endColumn":29,"suggestions":"294"},{"ruleId":"221","severity":1,"message":"295","line":150,"column":6,"nodeType":"223","endLine":150,"endColumn":8,"suggestions":"296"},{"ruleId":"233","severity":1,"message":"234","line":227,"column":19,"nodeType":"235","endLine":234,"endColumn":21},{"ruleId":"240","severity":1,"message":"241","line":16,"column":1,"nodeType":"242","endLine":58,"endColumn":3},{"ruleId":"221","severity":1,"message":"269","line":68,"column":6,"nodeType":"223","endLine":68,"endColumn":8,"suggestions":"297"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'messages' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["298"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["299"],"no-native-reassign",["300"],"no-negated-in-lhs",["301"],"React Hook useEffect has missing dependencies: 'history', 'setUserData', and 'user'. Either include them or remove the dependency array. If 'setUserData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["302"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["300"],["301"],["300"],["301"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration",["300"],["301"],["300"],["301"],"unicode-bom","Unexpected Unicode BOM (Byte Order Mark).","Program","unexpected",{"range":"303","text":"304"},["300"],["301"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute",["300"],["301"],["300"],["301"],["300"],["301"],["300"],["301"],["300"],["301"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has missing dependencies: 'setUserData' and 'user'. Either include them or remove the dependency array.",["305"],"no-unused-vars","'message' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'getMatch', 'setUserData', and 'user'. Either include them or remove the dependency array.",["306"],"React Hook useEffect has missing dependencies: 'conversationPartnerId', 'setConversationPartnerId', and 'user._id'. Either include them or remove the dependency array. If 'setConversationPartnerId' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["307"],"'getMessages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getNotifications'. Either include it or remove the dependency array.",["308"],"React Hook useEffect has missing dependencies: 'getNotifications', 'setUserData', and 'user'. Either include them or remove the dependency array.",["309"],["310"],"'Badge' is defined but never used.","'api' is defined but never used.",["311"],["312"],"React Hook useEffect has missing dependencies: 'chatData' and 'user'. Either include them or remove the dependency array.",["313"],"React Hook useEffect has missing dependencies: 'chatData', 'history', and 'user'. Either include them or remove the dependency array.",["314"],"React Hook useEffect has missing dependencies: 'getConversationPartner' and 'user'. Either include them or remove the dependency array.",["315"],"React Hook useEffect has missing dependencies: 'conversationPartnerId', 'messages', 'setChatData', and 'user'. Either include them or remove the dependency array. If 'setChatData' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["316"],["317"],{"desc":"318","fix":"319"},{"desc":"320","fix":"321"},"no-global-assign","no-unsafe-negation",{"desc":"322","fix":"323"},[-1,0],"",{"desc":"324","fix":"325"},{"desc":"326","fix":"327"},{"desc":"328","fix":"329"},{"desc":"330","fix":"331"},{"desc":"332","fix":"333"},{"desc":"334","fix":"335"},{"desc":"334","fix":"336"},{"desc":"324","fix":"337"},{"desc":"338","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"324","fix":"346"},"Update the dependencies array to be: [messages, user, user.currentChatId]",{"range":"347","text":"348"},"Update the dependencies array to be: [history]",{"range":"349","text":"350"},"Update the dependencies array to be: [history, setUserData, user]",{"range":"351","text":"352"},"Update the dependencies array to be: [setUserData, user]",{"range":"353","text":"354"},"Update the dependencies array to be: [getMatch, setUserData, user, user._id]",{"range":"355","text":"356"},"Update the dependencies array to be: [conversationPartnerId, messages, setConversationPartnerId, user._id]",{"range":"357","text":"358"},"Update the dependencies array to be: [getNotifications, user._id]",{"range":"359","text":"360"},"Update the dependencies array to be: [getNotifications, setUserData, user]",{"range":"361","text":"362"},"Update the dependencies array to be: [setUserData, user, user._id]",{"range":"363","text":"364"},{"range":"365","text":"364"},{"range":"366","text":"354"},"Update the dependencies array to be: [chatData, messages, user]",{"range":"367","text":"368"},"Update the dependencies array to be: [chatData, history, user]",{"range":"369","text":"370"},"Update the dependencies array to be: [conversationPartnerId, getConversationPartner, user]",{"range":"371","text":"372"},"Update the dependencies array to be: [conversationPartnerId, messages, setChatData, user]",{"range":"373","text":"374"},{"range":"375","text":"354"},[1075,1095],"[messages, user, user.currentChatId]",[2070,2072],"[history]",[2407,2409],"[history, setUserData, user]",[908,910],"[setUserData, user]",[1122,1132],"[getMatch, setUserData, user, user._id]",[1422,1432],"[conversationPartnerId, messages, setConversationPartnerId, user._id]",[3024,3034],"[getNotifications, user._id]",[3159,3161],"[getNotifications, setUserData, user]",[756,766],"[setUserData, user, user._id]",[829,839],[909,911],[1998,2008],"[chatData, messages, user]",[2526,2528],"[chatData, history, user]",[2686,2709],"[conversationPartnerId, getConversationPartner, user]",[3873,3875],"[conversationPartnerId, messages, setChatData, user]",[1814,1816]]